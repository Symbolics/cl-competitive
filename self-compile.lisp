(eval-when (:execute)
  (defun self-compile ()
    (let ((*compile-print* nil)
          (*compile-verbose* nil))
      (compile-file #P"Main.lisp")
      (with-open-file (out-lisp #P"Main.lisp" :direction :output :if-exists :supersede :element-type '(unsigned-byte 8))
        (with-open-file (in-fasl #P"Main.fasl" :direction :input :element-type '(unsigned-byte 8))
          (loop for byte = (read-byte in-fasl nil -1)
                while (>= byte 0)
                do (write-byte byte out-lisp)))))
    (quit :unix-status 0))
  (self-compile))
