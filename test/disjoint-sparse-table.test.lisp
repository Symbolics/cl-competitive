(eval-when (:compile-toplevel :load-toplevel :execute)
  (load "test-util")
  (load "../disjoint-sparse-table.lisp"))

(use-package :test-util)

(with-test (:name disjoint-sparse-table)
  (let ((table (make-disjoint-sparse-table #(1 2 3 4 5) #'*)))
    (assert (= 1 (dst-query table #'* 0 1)))
    (assert (= 2 (dst-query table #'* 0 2)))
    (assert (= 6 (dst-query table #'* 0 3)))
    (assert (= 24 (dst-query table #'* 0 4)))
    (assert (= 120 (dst-query table #'* 0 5)))
    (assert (= 2 (dst-query table #'* 1 2)))
    (assert (= 6 (dst-query table #'* 1 3)))
    (assert (= 24 (dst-query table #'* 1 4)))
    (assert (= 120 (dst-query table #'* 1 5)))
    (assert (= 3 (dst-query table #'* 2 3)))
    (assert (= 12 (dst-query table #'* 2 4)))
    (assert (= 60 (dst-query table #'* 2 5)))
    (assert (= 4 (dst-query table #'* 3 4)))
    (assert (= 20 (dst-query table #'* 3 5)))
    (assert (= 5 (dst-query table #'* 4 5))))
  (assert (equalp #2a() (make-disjoint-sparse-table #() #'gcd))))
