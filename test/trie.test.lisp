(eval-when (:compile-toplevel :load-toplevel :execute)
  (load "test-util")
  (load "../trie.lisp"))

(use-package :test-util)

(with-test (:name trie)
  (let ((trie (make-trie)))
    (trie-add! trie "abra" 1)
    (trie-add! trie "abrac" 2)
    (trie-add! trie "rac" 3)
    (trie-add! trie "racad" 4)
    (assert (= 1 (trie-get trie "abra")))
    (assert (null (trie-get trie "ab")))
    (assert (null (trie-get trie "")))
    (trie-add! trie "" 5)
    (assert (= 5 (trie-get trie "")))
    (assert (equal '(5 2) (multiple-value-list (trie-query-longest trie "abracadabra"))))
    (let ((res #(-1 -1 5 -1 -1 3 -1 4)))
      (trie-query trie "abracadabra"
                  (lambda (pos value)
                    (assert (= (aref res pos) value)))
                  :start 2))))
