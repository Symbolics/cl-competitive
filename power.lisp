(declaim (inline generalized-power))
(defun generalized-power (base power op identity)
  (declare ((integer 0 #.most-positive-fixnum) power)
           (function op))
  (labels ((recur (x p)
             (declare ((integer 0 #.most-positive-fixnum) p))
             (cond ((zerop p) identity)
                   ((evenp p) (recur (funcall op x x) (ash p -1)))
                   (t (funcall op x (recur x (- p 1)))))))
    (recur base power)))
